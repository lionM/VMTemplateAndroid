plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

// 获取配置信息
def configs = rootProject.ext.configs

android {
    compileSdk configs.compileSdkVersion

    defaultConfig {
        minSdk configs.minSdkVersion
        targetSdk configs.targetSdkVersion

        // 资源文件 url 地址
        buildConfigField("String", "mqttAppId", configs.emMQTTAppId)
        buildConfigField("String", "mqttHost", configs.emMQTTHost)
        buildConfigField("String", "mqttPort", configs.emMQTTPort)
    }

    buildTypes {
        release {
            // 混淆文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-rules.pro'
        }
    }

    // 配置 Java 编译版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    // 开启 ViewBinding
    buildFeatures {
        viewBinding true
    }

    // 编译忽略错误配置
    lintOptions {
        abortOnError false
    }
    // kotlin 配置
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    kapt {
        arguments {
            // 阿里巴巴 ARouter Kotlin 下的配置
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    // ARouter 编译器，TODO 当代码中有一些自己没看到的错误的时候，ARouter 会拦截错误信息，看不到错误位置，把这行注释掉，重新编译
//    kapt 'com.alibaba:arouter-compiler:1.5.2'

    // MQTT sdk https://docs-im.easemob.com/mqtt/qsandroidsdk
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    // 依赖 base 库
    implementation project(':vmbase')

}
